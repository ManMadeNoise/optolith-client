import { Either, fromRight_, isLeft, mapM, maybeToEither, maybeToEither_ } from "../../../../Data/Either";
import { List } from "../../../../Data/List";
import { ensure, liftM2 } from "../../../../Data/Maybe";
import { fromList, lookupF, OrderedMap } from "../../../../Data/OrderedMap";
import { OmitName } from "../../../../Data/Record";
import { show } from "../../../../Data/Show";
import { Pair } from "../../../../Data/Tuple";
import { L10n, L10nRecord } from "../../../Models/Wiki/L10n";
import { mensureMapNonEmptyString, mensureMapNonEmptyStringList } from "../validateMapValueUtils";
import { lookupKeyValid, mapMNamed, TableType } from "../validateValueUtils";

const localeRx = /[a-z]{2}-[A-Z]{2}/u

const isLocale =
  (x: string) => localeRx .test (x)

export const toL10n =
  (id: string) =>
  (l10n_table: List<OrderedMap<string, string>>): Either<string, L10nRecord> => {
      // Shortcuts

      const l10n_rows =
        mapM<string, OrderedMap<string, string>, Pair<string, string>>
          ((row: OrderedMap<string, string>) =>
            maybeToEither
              ("Cell missing.")
              (liftM2<string, string, Pair<string, string>> (Pair)
                                                            (lookupF (row) ("key"))
                                                            (lookupF (row) ("value"))))
          (l10n_table)

      if (isLeft (l10n_rows)) {
        return l10n_rows
      }

      const l10n_map = fromList (fromRight_ (l10n_rows))

      const lookup_l10n = lookupF (l10n_map)

      const checkL10nNonEmptyString =
        lookupKeyValid (mensureMapNonEmptyString) (TableType.L10n) (lookup_l10n)

      const checkL10nNonEmptyStringList =
        lookupKeyValid (mensureMapNonEmptyStringList ("&&")) (TableType.L10n) (lookup_l10n)

      // Return error or result

      type MapWithEither<A> = { [K in keyof A]: Either<string, A[K]>}

      const mappedL10n: MapWithEither<OmitName<L10n>> = {
        "id": maybeToEither_ (() => `Expected: Locale, Received: ${show (id)}`)
                             (ensure (isLocale) (id)),
        "lastchanges": checkL10nNonEmptyString ("lastchanges"),
        "heroes": checkL10nNonEmptyString ("heroes"),
        "groups": checkL10nNonEmptyString ("groups"),
        "wiki": checkL10nNonEmptyString ("wiki"),
        "faq": checkL10nNonEmptyString ("faq"),
        "about": checkL10nNonEmptyString ("about"),
        "imprint": checkL10nNonEmptyString ("imprint"),
        "thirdpartylicenses": checkL10nNonEmptyString ("thirdpartylicenses"),
        "profile": checkL10nNonEmptyString ("profile"),
        "overview": checkL10nNonEmptyString ("overview"),
        "personaldata": checkL10nNonEmptyString ("personaldata"),
        "charactersheet": checkL10nNonEmptyString ("charactersheet"),
        "pact": checkL10nNonEmptyString ("pact"),
        "rules": checkL10nNonEmptyString ("rules"),
        "racecultureandprofession": checkL10nNonEmptyString ("racecultureandprofession"),
        "race": checkL10nNonEmptyString ("race"),
        "culture": checkL10nNonEmptyString ("culture"),
        "profession": checkL10nNonEmptyString ("profession"),
        "attributes": checkL10nNonEmptyString ("attributes"),
        "advantagesanddisadvantages": checkL10nNonEmptyString ("advantagesanddisadvantages"),
        "advantages": checkL10nNonEmptyString ("advantages"),
        "disadvantages": checkL10nNonEmptyString ("disadvantages"),
        "abilities": checkL10nNonEmptyString ("abilities"),
        "skills": checkL10nNonEmptyString ("skills"),
        "combattechniques": checkL10nNonEmptyString ("combattechniques"),
        "specialabilities": checkL10nNonEmptyString ("specialabilities"),
        "spells": checkL10nNonEmptyString ("spells"),
        "liturgicalchants": checkL10nNonEmptyString ("liturgicalchants"),
        "belongings": checkL10nNonEmptyString ("belongings"),
        "equipment": checkL10nNonEmptyString ("equipment"),
        "hitzonearmor": checkL10nNonEmptyString ("hitzonearmor"),
        "pets": checkL10nNonEmptyString ("pets"),
        "adventurepoints.short": checkL10nNonEmptyString ("adventurepoints.short"),
        "adventurepoint": checkL10nNonEmptyString ("adventurepoint"),
        "adventurepoints": checkL10nNonEmptyString ("adventurepoints"),
        "totalap.novar": checkL10nNonEmptyString ("totalap.novar"),
        "apspent.novar": checkL10nNonEmptyString ("apspent.novar"),
        "totalap": checkL10nNonEmptyString ("totalap"),
        "apspent": checkL10nNonEmptyString ("apspent"),
        "apspentonadvantages": checkL10nNonEmptyString ("apspentonadvantages"),
        "apspentonmagicadvantages": checkL10nNonEmptyString ("apspentonmagicadvantages"),
        "apspentonblessedadvantages": checkL10nNonEmptyString ("apspentonblessedadvantages"),
        "apspentondisadvantages": checkL10nNonEmptyString ("apspentondisadvantages"),
        "apspentonmagicdisadvantages": checkL10nNonEmptyString ("apspentonmagicdisadvantages"),
        "apspentonblesseddisadvantages":
          checkL10nNonEmptyString ("apspentonblesseddisadvantages"),
        "apspentonrace": checkL10nNonEmptyString ("apspentonrace"),
        "apspentonprofession": checkL10nNonEmptyString ("apspentonprofession"),
        "apspentonattributes": checkL10nNonEmptyString ("apspentonattributes"),
        "apspentonskills": checkL10nNonEmptyString ("apspentonskills"),
        "apspentoncombattechniques": checkL10nNonEmptyString ("apspentoncombattechniques"),
        "apspentonspells": checkL10nNonEmptyString ("apspentonspells"),
        "apspentoncantrips": checkL10nNonEmptyString ("apspentoncantrips"),
        "apspentonliturgicalchants": checkL10nNonEmptyString ("apspentonliturgicalchants"),
        "apspentonblessings": checkL10nNonEmptyString ("apspentonblessings"),
        "apspentonspecialabilities": checkL10nNonEmptyString ("apspentonspecialabilities"),
        "apspentonenergies": checkL10nNonEmptyString ("apspentonenergies"),
        "search": checkL10nNonEmptyString ("search"),
        "sortalphabetically": checkL10nNonEmptyString ("sortalphabetically"),
        "sortbydatemodified": checkL10nNonEmptyString ("sortbydatemodified"),
        "sortbygroup": checkL10nNonEmptyString ("sortbygroup"),
        "sortbyimprovementcost": checkL10nNonEmptyString ("sortbyimprovementcost"),
        "sortbyproperty": checkL10nNonEmptyString ("sortbyproperty"),
        "sortbylocation": checkL10nNonEmptyString ("sortbylocation"),
        "sortbycost": checkL10nNonEmptyString ("sortbycost"),
        "sortbyweight": checkL10nNonEmptyString ("sortbyweight"),
        "showactivated": checkL10nNonEmptyString ("showactivated"),
        "none": checkL10nNonEmptyString ("none"),
        "save": checkL10nNonEmptyString ("save"),
        "done": checkL10nNonEmptyString ("done"),
        "delete": checkL10nNonEmptyString ("delete"),
        "yes": checkL10nNonEmptyString ("yes"),
        "no": checkL10nNonEmptyString ("no"),
        "ok": checkL10nNonEmptyString ("ok"),
        "cancel": checkL10nNonEmptyString ("cancel"),
        "copy": checkL10nNonEmptyString ("copy"),
        "create": checkL10nNonEmptyString ("create"),
        "import": checkL10nNonEmptyString ("import"),
        "allheroes": checkL10nNonEmptyString ("allheroes"),
        "ownheroes": checkL10nNonEmptyString ("ownheroes"),
        "sharedheroes": checkL10nNonEmptyString ("sharedheroes"),
        "unsavedhero": checkL10nNonEmptyString ("unsavedhero"),
        "unsavedactions": checkL10nNonEmptyString ("unsavedactions"),
        "unsavedactions.text": checkL10nNonEmptyString ("unsavedactions.text"),
        "deletehero": checkL10nNonEmptyString ("deletehero"),
        "deletehero.text": checkL10nNonEmptyString ("deletehero.text"),
        "herocreation": checkL10nNonEmptyString ("herocreation"),
        "start": checkL10nNonEmptyString ("start"),
        "nameofhero": checkL10nNonEmptyString ("nameofhero"),
        "selectsex": checkL10nNonEmptyString ("selectsex"),
        "male": checkL10nNonEmptyString ("male"),
        "female": checkL10nNonEmptyString ("female"),
        "selectexperiencelevel": checkL10nNonEmptyString ("selectexperiencelevel"),
        "magic": checkL10nNonEmptyString ("magic"),
        "rituals": checkL10nNonEmptyString ("rituals"),
        "cantrips": checkL10nNonEmptyString ("cantrips"),
        "curses": checkL10nNonEmptyString ("curses"),
        "elvenmagicalsongs": checkL10nNonEmptyString ("elvenmagicalsongs"),
        "magicalmelodies": checkL10nNonEmptyString ("magicalmelodies"),
        "magicaldances": checkL10nNonEmptyString ("magicaldances"),
        "editprofessionname": checkL10nNonEmptyString ("editprofessionname"),
        "addadventurepoints": checkL10nNonEmptyString ("addadventurepoints"),
        "endherocreation": checkL10nNonEmptyString ("endherocreation"),
        "add": checkL10nNonEmptyString ("add"),
        "changeheroavatar": checkL10nNonEmptyString ("changeheroavatar"),
        "apply": checkL10nNonEmptyString ("apply"),
        "selectfile": checkL10nNonEmptyString ("selectfile"),
        "changeheroavatar.invalidfile": checkL10nNonEmptyString ("changeheroavatar.invalidfile"),
        "family": checkL10nNonEmptyString ("family"),
        "placeofbirth": checkL10nNonEmptyString ("placeofbirth"),
        "dateofbirth": checkL10nNonEmptyString ("dateofbirth"),
        "age": checkL10nNonEmptyString ("age"),
        "haircolor": checkL10nNonEmptyString ("haircolor"),
        "eyecolor": checkL10nNonEmptyString ("eyecolor"),
        "size": checkL10nNonEmptyString ("size"),
        "weight": checkL10nNonEmptyString ("weight"),
        "title": checkL10nNonEmptyString ("title"),
        "socialstatus": checkL10nNonEmptyString ("socialstatus"),
        "characteristics": checkL10nNonEmptyString ("characteristics"),
        "otherinfo": checkL10nNonEmptyString ("otherinfo"),
        "cultureareaknowledge": checkL10nNonEmptyString ("cultureareaknowledge"),
        "socialstatuses": checkL10nNonEmptyStringList ("socialstatuses"),
        "haircolors": checkL10nNonEmptyStringList ("haircolors"),
        "eyecolors": checkL10nNonEmptyStringList ("eyecolors"),
        "pactcategory": checkL10nNonEmptyString ("pactcategory"),
        "nopact": checkL10nNonEmptyString ("nopact"),
        "pactcategories": checkL10nNonEmptyStringList ("pactcategories"),
        "pactlevel": checkL10nNonEmptyString ("pactlevel"),
        "fairytype": checkL10nNonEmptyString ("fairytype"),
        "fairytypes": checkL10nNonEmptyStringList ("fairytypes"),
        "domain": checkL10nNonEmptyString ("domain"),
        "userdefined": checkL10nNonEmptyString ("userdefined"),
        "fairydomains": checkL10nNonEmptyStringList ("fairydomains"),
        "settings": checkL10nNonEmptyString ("settings"),
        "language": checkL10nNonEmptyString ("language"),
        "systemlanguage": checkL10nNonEmptyString ("systemlanguage"),
        "languagehint": checkL10nNonEmptyString ("languagehint"),
        "theme": checkL10nNonEmptyString ("theme"),
        "dark": checkL10nNonEmptyString ("dark"),
        "light": checkL10nNonEmptyString ("light"),
        "showanimations": checkL10nNonEmptyString ("showanimations"),
        "close": checkL10nNonEmptyString ("close"),
        "checkforupdates": checkL10nNonEmptyString ("checkforupdates"),
        "printtopdf": checkL10nNonEmptyString ("printtopdf"),
        "showattributevalues": checkL10nNonEmptyString ("showattributevalues"),
        "name": checkL10nNonEmptyString ("name"),
        "sex": checkL10nNonEmptyString ("sex"),
        "experiencelevel": checkL10nNonEmptyString ("experiencelevel"),
        "apcollected": checkL10nNonEmptyString ("apcollected"),
        "avatar": checkL10nNonEmptyString ("avatar"),
        "generalspecialabilites": checkL10nNonEmptyString ("generalspecialabilites"),
        "fatepoints": checkL10nNonEmptyString ("fatepoints"),
        "value": checkL10nNonEmptyString ("value"),
        "bonuspenalty": checkL10nNonEmptyString ("bonuspenalty"),
        "bonus": checkL10nNonEmptyString ("bonus"),
        "bought": checkL10nNonEmptyString ("bought"),
        "max": checkL10nNonEmptyString ("max"),
        "current": checkL10nNonEmptyString ("current"),
        "basestat": checkL10nNonEmptyString ("basestat"),
        "permanentlylostboughtback": checkL10nNonEmptyString ("permanentlylostboughtback"),
        "gamestats": checkL10nNonEmptyString ("gamestats"),
        "skill": checkL10nNonEmptyString ("skill"),
        "check": checkL10nNonEmptyString ("check"),
        "encumbrance.short": checkL10nNonEmptyString ("encumbrance.short"),
        "improvementcost.short": checkL10nNonEmptyString ("improvementcost.short"),
        "skillrating.short": checkL10nNonEmptyString ("skillrating.short"),
        "routinechecks.short": checkL10nNonEmptyString ("routinechecks.short"),
        "notes": checkL10nNonEmptyString ("notes"),
        "maybe": checkL10nNonEmptyString ("maybe"),
        "physicalskills": checkL10nNonEmptyString ("physicalskills"),
        "page.short": checkL10nNonEmptyString ("page.short"),
        "socialskills": checkL10nNonEmptyString ("socialskills"),
        "natureskills": checkL10nNonEmptyString ("natureskills"),
        "knowledgeskills": checkL10nNonEmptyString ("knowledgeskills"),
        "craftskills": checkL10nNonEmptyString ("craftskills"),
        "languages": checkL10nNonEmptyString ("languages"),
        "nativetongue.short": checkL10nNonEmptyString ("nativetongue.short"),
        "knownscripts": checkL10nNonEmptyString ("knownscripts"),
        "routinechecks": checkL10nNonEmptyString ("routinechecks"),
        "routinechecks.text1": checkL10nNonEmptyString ("routinechecks.text1"),
        "routinechecks.text2": checkL10nNonEmptyString ("routinechecks.text2"),
        "routinechecks.text3": checkL10nNonEmptyString ("routinechecks.text3"),
        "routinechecks.text4": checkL10nNonEmptyString ("routinechecks.text4"),
        "checkmod": checkL10nNonEmptyString ("checkmod"),
        "neededsr": checkL10nNonEmptyString ("neededsr"),
        "from": checkL10nNonEmptyString ("from"),
        "qualitylevels": checkL10nNonEmptyString ("qualitylevels"),
        "skillpoints.splitted": checkL10nNonEmptyString ("skillpoints.splitted"),
        "qualitylevel.splitted": checkL10nNonEmptyString ("qualitylevel.splitted"),
        "attributemodifiers": checkL10nNonEmptyString ("attributemodifiers"),
        "combat": checkL10nNonEmptyString ("combat"),
        "primaryattribute.medium": checkL10nNonEmptyString ("primaryattribute.medium"),
        "combattechniquerating.short": checkL10nNonEmptyString ("combattechniquerating.short"),
        "attackrangecombat.short": checkL10nNonEmptyString ("attackrangecombat.short"),
        "parry.short": checkL10nNonEmptyString ("parry.short"),
        "lifepoints": checkL10nNonEmptyString ("lifepoints"),
        "pain1": checkL10nNonEmptyString ("pain1"),
        "pain2": checkL10nNonEmptyString ("pain2"),
        "pain3": checkL10nNonEmptyString ("pain3"),
        "pain4": checkL10nNonEmptyString ("pain4"),
        "dying": checkL10nNonEmptyString ("dying"),
        "closecombatweapons": checkL10nNonEmptyString ("closecombatweapons"),
        "weapon": checkL10nNonEmptyString ("weapon"),
        "combattechnique": checkL10nNonEmptyString ("combattechnique"),
        "damagebonus.medium": checkL10nNonEmptyString ("damagebonus.medium"),
        "damagepoints.short": checkL10nNonEmptyString ("damagepoints.short"),
        "attackparrymodifier.short": checkL10nNonEmptyString ("attackparrymodifier.short"),
        "reach": checkL10nNonEmptyString ("reach"),
        "reachlabels": checkL10nNonEmptyStringList ("reachlabels"),
        "breakingpointrating.short": checkL10nNonEmptyString ("breakingpointrating.short"),
        "attack.short": checkL10nNonEmptyString ("attack.short"),
        "weightunit.short": checkL10nNonEmptyString ("weightunit.short"),
        "rangedcombatweapons": checkL10nNonEmptyString ("rangedcombatweapons"),
        "reloadtime": checkL10nNonEmptyString ("reloadtime"),
        "rangebrackets": checkL10nNonEmptyString ("rangebrackets"),
        "rangedcombat": checkL10nNonEmptyString ("rangedcombat"),
        "ammunition": checkL10nNonEmptyString ("ammunition"),
        "armors": checkL10nNonEmptyString ("armors"),
        "armor": checkL10nNonEmptyString ("armor"),
        "protection.short": checkL10nNonEmptyString ("protection.short"),
        "movementinitiative": checkL10nNonEmptyString ("movementinitiative"),
        "carriedwhereexamples": checkL10nNonEmptyString ("carriedwhereexamples"),
        "head.short": checkL10nNonEmptyString ("head.short"),
        "torso.short": checkL10nNonEmptyString ("torso.short"),
        "leftarm.short": checkL10nNonEmptyString ("leftarm.short"),
        "rightarm.short": checkL10nNonEmptyString ("rightarm.short"),
        "leftleg.short": checkL10nNonEmptyString ("leftleg.short"),
        "rightleg.short": checkL10nNonEmptyString ("rightleg.short"),
        "shieldparryingweapon": checkL10nNonEmptyString ("shieldparryingweapon"),
        "structurepoints.short": checkL10nNonEmptyString ("structurepoints.short"),
        "dice.short": checkL10nNonEmptyString ("dice.short"),
        "actions.short": checkL10nNonEmptyString ("actions.short"),
        "combatspecialabilities": checkL10nNonEmptyString ("combatspecialabilities"),
        "conditions": checkL10nNonEmptyString ("conditions"),
        "animosity": checkL10nNonEmptyString ("animosity"),
        "encumbrance": checkL10nNonEmptyString ("encumbrance"),
        "intoxicated": checkL10nNonEmptyString ("intoxicated"),
        "stupor": checkL10nNonEmptyString ("stupor"),
        "rapture": checkL10nNonEmptyString ("rapture"),
        "fear": checkL10nNonEmptyString ("fear"),
        "paralysis": checkL10nNonEmptyString ("paralysis"),
        "pain": checkL10nNonEmptyString ("pain"),
        "confusion": checkL10nNonEmptyString ("confusion"),
        "states": checkL10nNonEmptyString ("states"),
        "immobilized": checkL10nNonEmptyString ("immobilized"),
        "unconscious": checkL10nNonEmptyString ("unconscious"),
        "blind": checkL10nNonEmptyString ("blind"),
        "bloodlust": checkL10nNonEmptyString ("bloodlust"),
        "burning": checkL10nNonEmptyString ("burning"),
        "cramped": checkL10nNonEmptyString ("cramped"),
        "bound": checkL10nNonEmptyString ("bound"),
        "incapacitated": checkL10nNonEmptyString ("incapacitated"),
        "diseased": checkL10nNonEmptyString ("diseased"),
        "prone": checkL10nNonEmptyString ("prone"),
        "misfortune": checkL10nNonEmptyString ("misfortune"),
        "rage": checkL10nNonEmptyString ("rage"),
        "mute": checkL10nNonEmptyString ("mute"),
        "deaf": checkL10nNonEmptyString ("deaf"),
        "surprised": checkL10nNonEmptyString ("surprised"),
        "badsmell": checkL10nNonEmptyString ("badsmell"),
        "invisible": checkL10nNonEmptyString ("invisible"),
        "poisoned": checkL10nNonEmptyString ("poisoned"),
        "petrified": checkL10nNonEmptyString ("petrified"),
        "item": checkL10nNonEmptyString ("item"),
        "number.short": checkL10nNonEmptyString ("number.short"),
        "price": checkL10nNonEmptyString ("price"),
        "carriedwhere": checkL10nNonEmptyString ("carriedwhere"),
        "total": checkL10nNonEmptyString ("total"),
        "purse": checkL10nNonEmptyString ("purse"),
        "ducats": checkL10nNonEmptyString ("ducats"),
        "silverthalers": checkL10nNonEmptyString ("silverthalers"),
        "halers": checkL10nNonEmptyString ("halers"),
        "kreutzers": checkL10nNonEmptyString ("kreutzers"),
        "gems": checkL10nNonEmptyString ("gems"),
        "jewelry": checkL10nNonEmptyString ("jewelry"),
        "other": checkL10nNonEmptyString ("other"),
        "carryingcapacity": checkL10nNonEmptyString ("carryingcapacity"),
        "carryingcapacitycalc": checkL10nNonEmptyString ("carryingcapacitycalc"),
        "carryingcapacitylabel": checkL10nNonEmptyString ("carryingcapacitylabel"),
        "animal": checkL10nNonEmptyString ("animal"),
        "spellsandrituals": checkL10nNonEmptyString ("spellsandrituals"),
        "aemax": checkL10nNonEmptyString ("aemax"),
        "spellorritual": checkL10nNonEmptyString ("spellorritual"),
        "cost": checkL10nNonEmptyString ("cost"),
        "castingtime.splitted": checkL10nNonEmptyString ("castingtime.splitted"),
        "range.splitted": checkL10nNonEmptyString ("range.splitted"),
        "duration.splitted": checkL10nNonEmptyString ("duration.splitted"),
        "effect": checkL10nNonEmptyString ("effect"),
        "primaryattribute": checkL10nNonEmptyString ("primaryattribute"),
        "tradition": checkL10nNonEmptyString ("tradition"),
        "magicalspecialabilities": checkL10nNonEmptyString ("magicalspecialabilities"),
        "liturgicalchantsandceremonies":
          checkL10nNonEmptyString ("liturgicalchantsandceremonies"),
        "kpmax": checkL10nNonEmptyString ("kpmax"),
        "liturgicaltime.splitted": checkL10nNonEmptyString ("liturgicaltime.splitted"),
        "aspect": checkL10nNonEmptyString ("aspect"),
        "aspects.oneormore": checkL10nNonEmptyString ("aspects.oneormore"),
        "blessedspecialabilities": checkL10nNonEmptyString ("blessedspecialabilities"),
        "blessings": checkL10nNonEmptyString ("blessings"),
        "rulebase": checkL10nNonEmptyString ("rulebase"),
        "optionalrules": checkL10nNonEmptyString ("optionalrules"),
        "maximumattributescores": checkL10nNonEmptyString ("maximumattributescores"),
        "higherdefensestats": checkL10nNonEmptyString ("higherdefensestats"),
        "languagespecializations": checkL10nNonEmptyString ("languagespecializations"),
        "lifepoints.short": checkL10nNonEmptyString ("lifepoints.short"),
        "lifepointscalc": checkL10nNonEmptyString ("lifepointscalc"),
        "arcaneenergy": checkL10nNonEmptyString ("arcaneenergy"),
        "arcaneenergy.short": checkL10nNonEmptyString ("arcaneenergy.short"),
        "arcaneenergycalc": checkL10nNonEmptyString ("arcaneenergycalc"),
        "arcaneenergycalc.halfprimary": checkL10nNonEmptyString ("arcaneenergycalc.halfprimary"),
        "arcaneenergycalc.noprimary": checkL10nNonEmptyString ("arcaneenergycalc.noprimary"),
        "karmapoints": checkL10nNonEmptyString ("karmapoints"),
        "karmapoints.short": checkL10nNonEmptyString ("karmapoints.short"),
        "karmapointscalc": checkL10nNonEmptyString ("karmapointscalc"),
        "spirit": checkL10nNonEmptyString ("spirit"),
        "spirit.short": checkL10nNonEmptyString ("spirit.short"),
        "spiritcalc": checkL10nNonEmptyString ("spiritcalc"),
        "spirithalf": checkL10nNonEmptyString ("spirithalf"),
        "spirithalf.short": checkL10nNonEmptyString ("spirithalf.short"),
        "toughness": checkL10nNonEmptyString ("toughness"),
        "toughness.short": checkL10nNonEmptyString ("toughness.short"),
        "toughnesscalc": checkL10nNonEmptyString ("toughnesscalc"),
        "dodge": checkL10nNonEmptyString ("dodge"),
        "dodge.short": checkL10nNonEmptyString ("dodge.short"),
        "dodgecalc": checkL10nNonEmptyString ("dodgecalc"),
        "initiative": checkL10nNonEmptyString ("initiative"),
        "initiative.short": checkL10nNonEmptyString ("initiative.short"),
        "initiativecalc": checkL10nNonEmptyString ("initiativecalc"),
        "movement": checkL10nNonEmptyString ("movement"),
        "movement.short": checkL10nNonEmptyString ("movement.short"),
        "movementcalc": checkL10nNonEmptyString ("movementcalc"),
        "woundthreshold": checkL10nNonEmptyString ("woundthreshold"),
        "woundthreshold.short": checkL10nNonEmptyString ("woundthreshold.short"),
        "woundthresholdcalc": checkL10nNonEmptyString ("woundthresholdcalc"),
        "boughtback": checkL10nNonEmptyString ("boughtback"),
        "spent": checkL10nNonEmptyString ("spent"),
        "select": checkL10nNonEmptyString ("select"),
        "next": checkL10nNonEmptyString ("next"),
        "showvalues": checkL10nNonEmptyString ("showvalues"),
        "apvalue": checkL10nNonEmptyString ("apvalue"),
        "lifepointbasevalue": checkL10nNonEmptyString ("lifepointbasevalue"),
        "spiritbasevalue": checkL10nNonEmptyString ("spiritbasevalue"),
        "toughnessbasevalue": checkL10nNonEmptyString ("toughnessbasevalue"),
        "movementbasevalue": checkL10nNonEmptyString ("movementbasevalue"),
        "attributeadjustments": checkL10nNonEmptyString ("attributeadjustments"),
        "commoncultures": checkL10nNonEmptyString ("commoncultures"),
        "automaticadvantages": checkL10nNonEmptyString ("automaticadvantages"),
        "stronglyrecommendedadvantages":
          checkL10nNonEmptyString ("stronglyrecommendedadvantages"),
        "stronglyrecommendeddisadvantages":
          checkL10nNonEmptyString ("stronglyrecommendeddisadvantages"),
        "commonadvantages": checkL10nNonEmptyString ("commonadvantages"),
        "commondisadvantages": checkL10nNonEmptyString ("commondisadvantages"),
        "uncommonadvantages": checkL10nNonEmptyString ("uncommonadvantages"),
        "uncommondisadvantages": checkL10nNonEmptyString ("uncommondisadvantages"),
        "allcultures": checkL10nNonEmptyString ("allcultures"),
        "or": checkL10nNonEmptyString ("or"),
        "script": checkL10nNonEmptyString ("script"),
        "areaknowledge": checkL10nNonEmptyString ("areaknowledge"),
        "commonmundaneprofessions": checkL10nNonEmptyString ("commonmundaneprofessions"),
        "commonmagicprofessions": checkL10nNonEmptyString ("commonmagicprofessions"),
        "commonblessedprofessions": checkL10nNonEmptyString ("commonblessedprofessions"),
        "commonskills": checkL10nNonEmptyString ("commonskills"),
        "uncommonskills": checkL10nNonEmptyString ("uncommonskills"),
        "commonnames": checkL10nNonEmptyString ("commonnames"),
        "culturalpackageap": checkL10nNonEmptyString ("culturalpackageap"),
        "allprofessions": checkL10nNonEmptyString ("allprofessions"),
        "commonprofessions": checkL10nNonEmptyString ("commonprofessions"),
        "allprofessiongroups": checkL10nNonEmptyString ("allprofessiongroups"),
        "mundaneprofessions": checkL10nNonEmptyString ("mundaneprofessions"),
        "magicalprofessions": checkL10nNonEmptyString ("magicalprofessions"),
        "blessedprofessions": checkL10nNonEmptyString ("blessedprofessions"),
        "novariant": checkL10nNonEmptyString ("novariant"),
        "ownprofession": checkL10nNonEmptyString ("ownprofession"),
        "prerequisites": checkL10nNonEmptyString ("prerequisites"),
        "languagesandliteracytotalingap":
          checkL10nNonEmptyString ("languagesandliteracytotalingap"),
        "skillspecialization": checkL10nNonEmptyString ("skillspecialization"),
        "cursestotalingap": checkL10nNonEmptyString ("cursestotalingap"),
        "combattechniquesselection": checkL10nNonEmptyString ("combattechniquesselection"),
        "combattechniquecounter": checkL10nNonEmptyStringList ("combattechniquecounter"),
        "combattechniquessecondselection":
          checkL10nNonEmptyString ("combattechniquessecondselection"),
        "skillsselection": checkL10nNonEmptyString ("skillsselection"),
        "cantripsfromlist": checkL10nNonEmptyString ("cantripsfromlist"),
        "cantripcounter": checkL10nNonEmptyStringList ("cantripcounter"),
        "thetwelveblessings": checkL10nNonEmptyString ("thetwelveblessings"),
        "thetwelveblessingsexceptions": checkL10nNonEmptyString ("thetwelveblessingsexceptions"),
        "suggestedadvantages": checkL10nNonEmptyString ("suggestedadvantages"),
        "suggesteddisadvantages": checkL10nNonEmptyString ("suggesteddisadvantages"),
        "unsuitableadvantages": checkL10nNonEmptyString ("unsuitableadvantages"),
        "unsuitabledisadvantages": checkL10nNonEmptyString ("unsuitabledisadvantages"),
        "variants": checkL10nNonEmptyString ("variants"),
        "insteadof": checkL10nNonEmptyString ("insteadof"),
        "selectattributeadjustment": checkL10nNonEmptyString ("selectattributeadjustment"),
        "buyculturalpackage": checkL10nNonEmptyString ("buyculturalpackage"),
        "selectnativetongue": checkL10nNonEmptyString ("selectnativetongue"),
        "buyscript": checkL10nNonEmptyString ("buyscript"),
        "selectscript": checkL10nNonEmptyString ("selectscript"),
        "combattechniquessecondcounter":
          checkL10nNonEmptyStringList ("combattechniquessecondcounter"),
        "ofthefollowingcombattechniques":
          checkL10nNonEmptyString ("ofthefollowingcombattechniques"),
        "cursestotalingapleft": checkL10nNonEmptyString ("cursestotalingapleft"),
        "languagesandliteracytotalingapleft":
          checkL10nNonEmptyString ("languagesandliteracytotalingapleft"),
        "applicationforskillspecialization":
          checkL10nNonEmptyString ("applicationforskillspecialization"),
        "skillselectiongroups": checkL10nNonEmptyStringList ("skillselectiongroups"),
        "skillselectionap": checkL10nNonEmptyString ("skillselectionap"),
        "complete": checkL10nNonEmptyString ("complete"),
        "attributetotal": checkL10nNonEmptyString ("attributetotal"),
        "modifier": checkL10nNonEmptyString ("modifier"),
        "losttotal": checkL10nNonEmptyString ("losttotal"),
        "lifepointslostpermanently.short":
          checkL10nNonEmptyString ("lifepointslostpermanently.short"),
        "lifepointslostpermanently": checkL10nNonEmptyString ("lifepointslostpermanently"),
        "arcaneenergylostpermanently": checkL10nNonEmptyString ("arcaneenergylostpermanently"),
        "arcaneenergylostpermanently.short":
          checkL10nNonEmptyString ("arcaneenergylostpermanently.short"),
        "karmapointslostpermanently": checkL10nNonEmptyString ("karmapointslostpermanently"),
        "karmapointslostpermanently.short":
          checkL10nNonEmptyString ("karmapointslostpermanently.short"),
        "afraidof": checkL10nNonEmptyString ("afraidof"),
        "immunityto": checkL10nNonEmptyString ("immunityto"),
        "hatredof": checkL10nNonEmptyString ("hatredof"),
        "rule": checkL10nNonEmptyString ("rule"),
        "extendedcombatspecialabilities":
          checkL10nNonEmptyString ("extendedcombatspecialabilities"),
        "extendedmagicalspecialabilities":
          checkL10nNonEmptyString ("extendedmagicalspecialabilities"),
        "extendedblessedtspecialabilities":
          checkL10nNonEmptyString ("extendedblessedtspecialabilities"),
        "penalty": checkL10nNonEmptyString ("penalty"),
        "level": checkL10nNonEmptyString ("level"),
        "perlevel": checkL10nNonEmptyString ("perlevel"),
        "volume": checkL10nNonEmptyString ("volume"),
        "bindingcost": checkL10nNonEmptyString ("bindingcost"),
        "protectivecircle": checkL10nNonEmptyString ("protectivecircle"),
        "wardingcircle": checkL10nNonEmptyString ("wardingcircle"),
        "actions": checkL10nNonEmptyString ("actions"),
        "racecultureorprofessionrequiresautomaticorsuggested":
          checkL10nNonEmptyString ("racecultureorprofessionrequiresautomaticorsuggested"),
        "advantage": checkL10nNonEmptyString ("advantage"),
        "disadvantage": checkL10nNonEmptyString ("disadvantage"),
        "primaryattributeofthetradition":
          checkL10nNonEmptyString ("primaryattributeofthetradition"),
        "knowledgeofspell": checkL10nNonEmptyString ("knowledgeofspell"),
        "knowledgeofliturgicalchant": checkL10nNonEmptyString ("knowledgeofliturgicalchant"),
        "appropriatecombatstylespecialability":
          checkL10nNonEmptyString ("appropriatecombatstylespecialability"),
        "appropriatemagicalstylespecialability":
          checkL10nNonEmptyString ("appropriatemagicalstylespecialability"),
        "appropriateblessedstylespecialability":
          checkL10nNonEmptyString ("appropriateblessedstylespecialability"),
        "customcost": checkL10nNonEmptyString ("customcost"),
        "customcostfor": checkL10nNonEmptyString ("customcostfor"),
        "skillgroups": checkL10nNonEmptyStringList ("skillgroups"),
        "newapplications": checkL10nNonEmptyString ("newapplications"),
        "applications": checkL10nNonEmptyString ("applications"),
        "tools": checkL10nNonEmptyString ("tools"),
        "quality": checkL10nNonEmptyString ("quality"),
        "failedcheck": checkL10nNonEmptyString ("failedcheck"),
        "criticalsuccess": checkL10nNonEmptyString ("criticalsuccess"),
        "botch": checkL10nNonEmptyString ("botch"),
        "improvementcost": checkL10nNonEmptyString ("improvementcost"),
        "common": checkL10nNonEmptyString ("common"),
        "uncommon": checkL10nNonEmptyString ("uncommon"),
        "combattechniquegroups": checkL10nNonEmptyStringList ("combattechniquegroups"),
        "special": checkL10nNonEmptyString ("special"),
        "specialabilitygroups": checkL10nNonEmptyStringList ("specialabilitygroups"),
        "combatspecialabilitygroups": checkL10nNonEmptyStringList ("combatspecialabilitygroups"),
        "spellgroups": checkL10nNonEmptyStringList ("spellgroups"),
        "cantrip": checkL10nNonEmptyString ("cantrip"),
        "propertylist": checkL10nNonEmptyStringList ("propertylist"),
        "magicaltraditions": checkL10nNonEmptyStringList ("magicaltraditions"),
        "castingtime": checkL10nNonEmptyString ("castingtime"),
        "ritualtime": checkL10nNonEmptyString ("ritualtime"),
        "aecost": checkL10nNonEmptyString ("aecost"),
        "range": checkL10nNonEmptyString ("range"),
        "duration": checkL10nNonEmptyString ("duration"),
        "targetcategory": checkL10nNonEmptyString ("targetcategory"),
        "property": checkL10nNonEmptyString ("property"),
        "traditions": checkL10nNonEmptyString ("traditions"),
        "lengthoftime": checkL10nNonEmptyString ("lengthoftime"),
        "musictradition": checkL10nNonEmptyString ("musictradition"),
        "liturgicalchantgroups": checkL10nNonEmptyStringList ("liturgicalchantgroups"),
        "blessing": checkL10nNonEmptyString ("blessing"),
        "aspectlist": checkL10nNonEmptyStringList ("aspectlist"),
        "blessedtraditions": checkL10nNonEmptyStringList ("blessedtraditions"),
        "liturgicaltime": checkL10nNonEmptyString ("liturgicaltime"),
        "ceremonialtime": checkL10nNonEmptyString ("ceremonialtime"),
        "kpcost": checkL10nNonEmptyString ("kpcost"),
        "ducates.short": checkL10nNonEmptyString ("ducates.short"),
        "silverthalers.short": checkL10nNonEmptyString ("silverthalers.short"),
        "halers.short": checkL10nNonEmptyString ("halers.short"),
        "kreutzers.short": checkL10nNonEmptyString ("kreutzers.short"),
        "initialstartingwealth": checkL10nNonEmptyString ("initialstartingwealth"),
        "priceunit": checkL10nNonEmptyString ("priceunit"),
        "itemgroups": checkL10nNonEmptyStringList ("itemgroups"),
        "armortypes": checkL10nNonEmptyStringList ("armortypes"),
        "damage": checkL10nNonEmptyString ("damage"),
        "primaryattributeanddamagethreshold.short":
          checkL10nNonEmptyString ("primaryattributeanddamagethreshold.short"),
        "length": checkL10nNonEmptyString ("length"),
        "lengthunit": checkL10nNonEmptyString ("lengthunit"),
        "range.short": checkL10nNonEmptyString ("range.short"),
        "edititem": checkL10nNonEmptyString ("edititem"),
        "createitem": checkL10nNonEmptyString ("createitem"),
        "number": checkL10nNonEmptyString ("number"),
        "itemgroup": checkL10nNonEmptyString ("itemgroup"),
        "itemgrouphint": checkL10nNonEmptyString ("itemgrouphint"),
        "improvisedweapon": checkL10nNonEmptyString ("improvisedweapon"),
        "improvisedweapongroup": checkL10nNonEmptyString ("improvisedweapongroup"),
        "template": checkL10nNonEmptyString ("template"),
        "primaryattribute.withshort": checkL10nNonEmptyString ("primaryattribute.withshort"),
        "primaryattribute.short": checkL10nNonEmptyString ("primaryattribute.short"),
        "damagethreshold": checkL10nNonEmptyString ("damagethreshold"),
        "separatedamagethresholds": checkL10nNonEmptyString ("separatedamagethresholds"),
        "breakingpointratingmodifier.short":
          checkL10nNonEmptyString ("breakingpointratingmodifier.short"),
        "damaged": checkL10nNonEmptyString ("damaged"),
        "damaged.short": checkL10nNonEmptyString ("damaged.short"),
        "lengthwithunit": checkL10nNonEmptyString ("lengthwithunit"),
        "parryingweapon": checkL10nNonEmptyString ("parryingweapon"),
        "twohandedweapon": checkL10nNonEmptyString ("twohandedweapon"),
        "rangeclose": checkL10nNonEmptyString ("rangeclose"),
        "rangemedium": checkL10nNonEmptyString ("rangemedium"),
        "rangefar": checkL10nNonEmptyString ("rangefar"),
        "armortype": checkL10nNonEmptyString ("armortype"),
        "sturdinessrating.short": checkL10nNonEmptyString ("sturdinessrating.short"),
        "sturdinessmodifier.short": checkL10nNonEmptyString ("sturdinessmodifier.short"),
        "wear": checkL10nNonEmptyString ("wear"),
        "wear.short": checkL10nNonEmptyString ("wear.short"),
        "hitzonearmoronly": checkL10nNonEmptyString ("hitzonearmoronly"),
        "movementmodifier.short": checkL10nNonEmptyString ("movementmodifier.short"),
        "initiativemodifier.short": checkL10nNonEmptyString ("initiativemodifier.short"),
        "additionalpenalties": checkL10nNonEmptyString ("additionalpenalties"),
        "edithitzonearmor": checkL10nNonEmptyString ("edithitzonearmor"),
        "createhitzonearmor": checkL10nNonEmptyString ("createhitzonearmor"),
        "head": checkL10nNonEmptyString ("head"),
        "torso": checkL10nNonEmptyString ("torso"),
        "leftarm": checkL10nNonEmptyString ("leftarm"),
        "rightarm": checkL10nNonEmptyString ("rightarm"),
        "leftleg": checkL10nNonEmptyString ("leftleg"),
        "rightleg": checkL10nNonEmptyString ("rightleg"),
        "rulemechanics": checkL10nNonEmptyString ("rulemechanics"),
        "weaponadvantage": checkL10nNonEmptyString ("weaponadvantage"),
        "weapondisadvantage": checkL10nNonEmptyString ("weapondisadvantage"),
        "armoradvantage": checkL10nNonEmptyString ("armoradvantage"),
        "armordisadvantage": checkL10nNonEmptyString ("armordisadvantage"),
        "sizecategory": checkL10nNonEmptyString ("sizecategory"),
        "type": checkL10nNonEmptyString ("type"),
        "apspent.short": checkL10nNonEmptyString ("apspent.short"),
        "attacks": checkL10nNonEmptyString ("attacks"),
        "image": checkL10nNonEmptyString ("image"),
        "error": checkL10nNonEmptyString ("error"),
        "errorcode": checkL10nNonEmptyString ("errorcode"),
        "loadtableserror": checkL10nNonEmptyString ("loadtableserror"),
        "saveconfigerror": checkL10nNonEmptyString ("saveconfigerror"),
        "saveheroeserror": checkL10nNonEmptyString ("saveheroeserror"),
        "exportheroasjson": checkL10nNonEmptyString ("exportheroasjson"),
        "herosaved": checkL10nNonEmptyString ("herosaved"),
        "exportheroerror": checkL10nNonEmptyString ("exportheroerror"),
        "printcharactersheettopdf": checkL10nNonEmptyString ("printcharactersheettopdf"),
        "pdfsaved": checkL10nNonEmptyString ("pdfsaved"),
        "pdfsaveerror": checkL10nNonEmptyString ("pdfsaveerror"),
        "pdfcreationerror": checkL10nNonEmptyString ("pdfcreationerror"),
        "importheroerror": checkL10nNonEmptyString ("importheroerror"),
        "allsaved": checkL10nNonEmptyString ("allsaved"),
        "everythingelsesaved": checkL10nNonEmptyString ("everythingelsesaved"),
        "emptylist": checkL10nNonEmptyString ("emptylist"),
        "musictraditions": checkL10nNonEmptyStringList ("musictraditions"),
        "notenoughap": checkL10nNonEmptyString ("notenoughap"),
        "notenoughap.text": checkL10nNonEmptyString ("notenoughap.text"),
        "reachedlimit": checkL10nNonEmptyString ("reachedlimit"),
        "reachedaplimit": checkL10nNonEmptyString ("reachedaplimit"),
        "magicaladvantages": checkL10nNonEmptyString ("magicaladvantages"),
        "blessedadvantages": checkL10nNonEmptyString ("blessedadvantages"),
        "magicaldisadvantages": checkL10nNonEmptyString ("magicaldisadvantages"),
        "blesseddisadvantages": checkL10nNonEmptyString ("blesseddisadvantages"),
        "remove": checkL10nNonEmptyString ("remove"),
        "removeenergypointslostpermanently":
          checkL10nNonEmptyString ("removeenergypointslostpermanently"),
        "removeenergypointslostpermanentlyinputhint":
          checkL10nNonEmptyString ("removeenergypointslostpermanentlyinputhint"),
        "group": checkL10nNonEmptyString ("group"),
        "skillrating": checkL10nNonEmptyString ("skillrating"),
        "combattechniquerating": checkL10nNonEmptyString ("combattechniquerating"),
        "attack": checkL10nNonEmptyString ("attack"),
        "parry": checkL10nNonEmptyString ("parry"),
        "checkmodifier.short": checkL10nNonEmptyString ("checkmodifier.short"),
        "checkmodifier": checkL10nNonEmptyString ("checkmodifier"),
        "unfamiliartraditions": checkL10nNonEmptyString ("unfamiliartraditions"),
        "spellextensions": checkL10nNonEmptyString ("spellextensions"),
        "liturgicalchantextensions": checkL10nNonEmptyString ("liturgicalchantextensions"),
        "enableeditingheroaftercreationphase":
          checkL10nNonEmptyString ("enableeditingheroaftercreationphase"),
        "allcombattechniques": checkL10nNonEmptyString ("allcombattechniques"),
        "newversionavailable": checkL10nNonEmptyString ("newversionavailable"),
        "newversionavailable.text": checkL10nNonEmptyString ("newversionavailable.text"),
        "newversionavailable.textwithsize":
          checkL10nNonEmptyString ("newversionavailable.textwithsize"),
        "update": checkL10nNonEmptyString ("update"),
        "nonewversionavailable": checkL10nNonEmptyString ("nonewversionavailable"),
        "nonewversionavailable.text": checkL10nNonEmptyString ("nonewversionavailable.text"),
        "downloadupdate": checkL10nNonEmptyString ("downloadupdate"),
        "attributeadjustmentselection": checkL10nNonEmptyString ("attributeadjustmentselection"),
        "aboutapp": checkL10nNonEmptyString ("aboutapp"),
        "preferences": checkL10nNonEmptyString ("preferences"),
        "quit": checkL10nNonEmptyString ("quit"),
        "edit": checkL10nNonEmptyString ("edit"),
        "view": checkL10nNonEmptyString ("view"),
        "enableallrulebooks": checkL10nNonEmptyString ("enableallrulebooks"),
        "races": checkL10nNonEmptyString ("races"),
        "cultures": checkL10nNonEmptyString ("cultures"),
        "professions": checkL10nNonEmptyString ("professions"),
        "items": checkL10nNonEmptyString ("items"),
        "allskills": checkL10nNonEmptyString ("allskills"),
        "allspecialabilities": checkL10nNonEmptyString ("allspecialabilities"),
        "allspells": checkL10nNonEmptyString ("allspells"),
        "allliturgicalchants": checkL10nNonEmptyString ("allliturgicalchants"),
        "allitemtemplates": checkL10nNonEmptyString ("allitemtemplates"),
        "chooseacategory": checkL10nNonEmptyString ("chooseacategory"),
        "chooseacategorytodisplayalist":
          checkL10nNonEmptyString ("chooseacategorytodisplayalist"),
        "emptylistnoresults": checkL10nNonEmptyString ("emptylistnoresults"),
        "extendedskillspecialabilities": checkL10nNonEmptyString ("extendedskillspecialabilities"),
        "deleteavatar": checkL10nNonEmptyString ("deleteavatar"),
        "stronglyrecommended": checkL10nNonEmptyString ("stronglyrecommended"),
        "unfamiliarspells": checkL10nNonEmptyString ("unfamiliarspells"),
        "unfamiliarspellselectionfortraditionguildmage":
          checkL10nNonEmptyString ("unfamiliarspellselectionfortraditionguildmage"),
        "selectaspell": checkL10nNonEmptyString ("selectaspell"),
        "pactisincompletehint": checkL10nNonEmptyString ("pactisincompletehint"),
        "manualherodatarepair": checkL10nNonEmptyString ("manualherodatarepair"),
        "manualherodatarepairexplanation":
          checkL10nNonEmptyString ("manualherodatarepairexplanation"),
        "unfamiliarspell": checkL10nNonEmptyString ("unfamiliarspell"),
        "saveandquit": checkL10nNonEmptyString ("saveandquit"),
        "uses": checkL10nNonEmptyString ("uses"),
        "complementarysources": checkL10nNonEmptyString ("complementarysources"),
        "and": checkL10nNonEmptyString ("and"),
        "demondomains": checkL10nNonEmptyStringList ("demondomains"),
        "demontypes": checkL10nNonEmptyStringList ("demontypes"),
        "demontype": checkL10nNonEmptyString ("demontype"),
        "circleofdamnation": checkL10nNonEmptyString ("circleofdamnation"),
        "lesserpact": checkL10nNonEmptyString ("lesserpact"),
        "tribaltraditions": checkL10nNonEmptyString ("tribaltraditions"),
        "tribes": checkL10nNonEmptyStringList ("tribes"),
        "saveheroerror": checkL10nNonEmptyString ("saveheroerror"),
        "brews": checkL10nNonEmptyStringList ("brews"),
        "brew": checkL10nNonEmptyString ("brew"),
        "all": checkL10nNonEmptyString ("all"),
        "allmeleecombattechniques": checkL10nNonEmptyString ("allmeleecombattechniques"),
        "allrangedcombattechniques": checkL10nNonEmptyString ("allrangedcombattechniques"),
        "allmeleecombattechniqueswithparry":
          checkL10nNonEmptyString ("allmeleecombattechniqueswithparry"),
        "allmeleecombattechniquesforonehandedweapons":
          checkL10nNonEmptyString ("allmeleecombattechniquesforonehandedweapons"),
        "youcannotuseamodificationonthisspellscastingtime":
          checkL10nNonEmptyString ("youcannotuseamodificationonthisspellscastingtime"),
        "youcannotuseamodificationonthisspellsritualtime":
          checkL10nNonEmptyString ("youcannotuseamodificationonthisspellsritualtime"),
        "youcannotuseamodificationonthisspellscost":
          checkL10nNonEmptyString ("youcannotuseamodificationonthisspellscost"),
        "youcannotuseamodificationonthisspellsrange":
          checkL10nNonEmptyString ("youcannotuseamodificationonthisspellsrange"),
        "youcannotuseamodificationonthisspellsduration":
          checkL10nNonEmptyString ("youcannotuseamodificationonthisspellsduration"),
        "youcannotuseamodificationonthischantsliturgicaltime":
          checkL10nNonEmptyString ("youcannotuseamodificationonthischantsliturgicaltime"),
        "youcannotuseamodificationonthischantsceremonialtime":
          checkL10nNonEmptyString ("youcannotuseamodificationonthischantsceremonialtime"),
        "youcannotuseamodificationonthischantscost":
          checkL10nNonEmptyString ("youcannotuseamodificationonthischantscost"),
        "youcannotuseamodificationonthischantsrange":
          checkL10nNonEmptyString ("youcannotuseamodificationonthischantsrange"),
        "youcannotuseamodificationonthischantsduration":
          checkL10nNonEmptyString ("youcannotuseamodificationonthischantsduration"),
      }

      return mapMNamed
        (mappedL10n)
        (res => L10n ({
          // tslint:disable: no-string-literal
          "id": res ["id"],
          "lastchanges": res ["lastchanges"],
          "heroes": res ["heroes"],
          "groups": res ["groups"],
          "wiki": res ["wiki"],
          "faq": res ["faq"],
          "about": res ["about"],
          "imprint": res ["imprint"],
          "thirdpartylicenses": res ["thirdpartylicenses"],
          "profile": res ["profile"],
          "overview": res ["overview"],
          "personaldata": res ["personaldata"],
          "charactersheet": res ["charactersheet"],
          "pact": res ["pact"],
          "rules": res ["rules"],
          "racecultureandprofession": res ["racecultureandprofession"],
          "race": res ["race"],
          "culture": res ["culture"],
          "profession": res ["profession"],
          "attributes": res ["attributes"],
          "advantagesanddisadvantages": res ["advantagesanddisadvantages"],
          "advantages": res ["advantages"],
          "disadvantages": res ["disadvantages"],
          "abilities": res ["abilities"],
          "skills": res ["skills"],
          "combattechniques": res ["combattechniques"],
          "specialabilities": res ["specialabilities"],
          "spells": res ["spells"],
          "liturgicalchants": res ["liturgicalchants"],
          "belongings": res ["belongings"],
          "equipment": res ["equipment"],
          "hitzonearmor": res ["hitzonearmor"],
          "pets": res ["pets"],
          "adventurepoints.short": res ["adventurepoints.short"],
          "adventurepoint": res ["adventurepoint"],
          "adventurepoints": res ["adventurepoints"],
          "totalap.novar": res ["totalap.novar"],
          "apspent.novar": res ["apspent.novar"],
          "totalap": res ["totalap"],
          "apspent": res ["apspent"],
          "apspentonadvantages": res ["apspentonadvantages"],
          "apspentonmagicadvantages": res ["apspentonmagicadvantages"],
          "apspentonblessedadvantages": res ["apspentonblessedadvantages"],
          "apspentondisadvantages": res ["apspentondisadvantages"],
          "apspentonmagicdisadvantages": res ["apspentonmagicdisadvantages"],
          "apspentonblesseddisadvantages": res ["apspentonblesseddisadvantages"],
          "apspentonrace": res ["apspentonrace"],
          "apspentonprofession": res ["apspentonprofession"],
          "apspentonattributes": res ["apspentonattributes"],
          "apspentonskills": res ["apspentonskills"],
          "apspentoncombattechniques": res ["apspentoncombattechniques"],
          "apspentonspells": res ["apspentonspells"],
          "apspentoncantrips": res ["apspentoncantrips"],
          "apspentonliturgicalchants": res ["apspentonliturgicalchants"],
          "apspentonblessings": res ["apspentonblessings"],
          "apspentonspecialabilities": res ["apspentonspecialabilities"],
          "apspentonenergies": res ["apspentonenergies"],
          "search": res ["search"],
          "sortalphabetically": res ["sortalphabetically"],
          "sortbydatemodified": res ["sortbydatemodified"],
          "sortbygroup": res ["sortbygroup"],
          "sortbyimprovementcost": res ["sortbyimprovementcost"],
          "sortbyproperty": res ["sortbyproperty"],
          "sortbylocation": res ["sortbylocation"],
          "sortbycost": res ["sortbycost"],
          "sortbyweight": res ["sortbyweight"],
          "showactivated": res ["showactivated"],
          "none": res ["none"],
          "save": res ["save"],
          "done": res ["done"],
          "delete": res ["delete"],
          "yes": res ["yes"],
          "no": res ["no"],
          "ok": res ["ok"],
          "cancel": res ["cancel"],
          "copy": res ["copy"],
          "create": res ["create"],
          "import": res ["import"],
          "allheroes": res ["allheroes"],
          "ownheroes": res ["ownheroes"],
          "sharedheroes": res ["sharedheroes"],
          "unsavedhero": res ["unsavedhero"],
          "unsavedactions": res ["unsavedactions"],
          "unsavedactions.text": res ["unsavedactions.text"],
          "deletehero": res ["deletehero"],
          "deletehero.text": res ["deletehero.text"],
          "herocreation": res ["herocreation"],
          "start": res ["start"],
          "nameofhero": res ["nameofhero"],
          "selectsex": res ["selectsex"],
          "male": res ["male"],
          "female": res ["female"],
          "selectexperiencelevel": res ["selectexperiencelevel"],
          "magic": res ["magic"],
          "rituals": res ["rituals"],
          "cantrips": res ["cantrips"],
          "curses": res ["curses"],
          "elvenmagicalsongs": res ["elvenmagicalsongs"],
          "magicalmelodies": res ["magicalmelodies"],
          "magicaldances": res ["magicaldances"],
          "editprofessionname": res ["editprofessionname"],
          "addadventurepoints": res ["addadventurepoints"],
          "endherocreation": res ["endherocreation"],
          "add": res ["add"],
          "changeheroavatar": res ["changeheroavatar"],
          "apply": res ["apply"],
          "selectfile": res ["selectfile"],
          "changeheroavatar.invalidfile": res ["changeheroavatar.invalidfile"],
          "family": res ["family"],
          "placeofbirth": res ["placeofbirth"],
          "dateofbirth": res ["dateofbirth"],
          "age": res ["age"],
          "haircolor": res ["haircolor"],
          "eyecolor": res ["eyecolor"],
          "size": res ["size"],
          "weight": res ["weight"],
          "title": res ["title"],
          "socialstatus": res ["socialstatus"],
          "characteristics": res ["characteristics"],
          "otherinfo": res ["otherinfo"],
          "cultureareaknowledge": res ["cultureareaknowledge"],
          "socialstatuses": res ["socialstatuses"],
          "haircolors": res ["haircolors"],
          "eyecolors": res ["eyecolors"],
          "pactcategory": res ["pactcategory"],
          "nopact": res ["nopact"],
          "pactcategories": res ["pactcategories"],
          "pactlevel": res ["pactlevel"],
          "fairytype": res ["fairytype"],
          "fairytypes": res ["fairytypes"],
          "domain": res ["domain"],
          "userdefined": res ["userdefined"],
          "fairydomains": res ["fairydomains"],
          "settings": res ["settings"],
          "language": res ["language"],
          "systemlanguage": res ["systemlanguage"],
          "languagehint": res ["languagehint"],
          "theme": res ["theme"],
          "dark": res ["dark"],
          "light": res ["light"],
          "showanimations": res ["showanimations"],
          "close": res ["close"],
          "checkforupdates": res ["checkforupdates"],
          "printtopdf": res ["printtopdf"],
          "showattributevalues": res ["showattributevalues"],
          "name": res ["name"],
          "sex": res ["sex"],
          "experiencelevel": res ["experiencelevel"],
          "apcollected": res ["apcollected"],
          "avatar": res ["avatar"],
          "generalspecialabilites": res ["generalspecialabilites"],
          "fatepoints": res ["fatepoints"],
          "value": res ["value"],
          "bonuspenalty": res ["bonuspenalty"],
          "bonus": res ["bonus"],
          "bought": res ["bought"],
          "max": res ["max"],
          "current": res ["current"],
          "basestat": res ["basestat"],
          "permanentlylostboughtback": res ["permanentlylostboughtback"],
          "gamestats": res ["gamestats"],
          "skill": res ["skill"],
          "check": res ["check"],
          "encumbrance.short": res ["encumbrance.short"],
          "improvementcost.short": res ["improvementcost.short"],
          "skillrating.short": res ["skillrating.short"],
          "routinechecks.short": res ["routinechecks.short"],
          "notes": res ["notes"],
          "maybe": res ["maybe"],
          "physicalskills": res ["physicalskills"],
          "page.short": res ["page.short"],
          "socialskills": res ["socialskills"],
          "natureskills": res ["natureskills"],
          "knowledgeskills": res ["knowledgeskills"],
          "craftskills": res ["craftskills"],
          "languages": res ["languages"],
          "nativetongue.short": res ["nativetongue.short"],
          "knownscripts": res ["knownscripts"],
          "routinechecks": res ["routinechecks"],
          "routinechecks.text1": res ["routinechecks.text1"],
          "routinechecks.text2": res ["routinechecks.text2"],
          "routinechecks.text3": res ["routinechecks.text3"],
          "routinechecks.text4": res ["routinechecks.text4"],
          "checkmod": res ["checkmod"],
          "neededsr": res ["neededsr"],
          "from": res ["from"],
          "qualitylevels": res ["qualitylevels"],
          "skillpoints.splitted": res ["skillpoints.splitted"],
          "qualitylevel.splitted": res ["qualitylevel.splitted"],
          "attributemodifiers": res ["attributemodifiers"],
          "combat": res ["combat"],
          "primaryattribute.medium": res ["primaryattribute.medium"],
          "combattechniquerating.short": res ["combattechniquerating.short"],
          "attackrangecombat.short": res ["attackrangecombat.short"],
          "parry.short": res ["parry.short"],
          "lifepoints": res ["lifepoints"],
          "pain1": res ["pain1"],
          "pain2": res ["pain2"],
          "pain3": res ["pain3"],
          "pain4": res ["pain4"],
          "dying": res ["dying"],
          "closecombatweapons": res ["closecombatweapons"],
          "weapon": res ["weapon"],
          "combattechnique": res ["combattechnique"],
          "damagebonus.medium": res ["damagebonus.medium"],
          "damagepoints.short": res ["damagepoints.short"],
          "attackparrymodifier.short": res ["attackparrymodifier.short"],
          "reach": res ["reach"],
          "reachlabels": res ["reachlabels"],
          "breakingpointrating.short": res ["breakingpointrating.short"],
          "damaged.short": res ["damaged.short"],
          "attack.short": res ["attack.short"],
          "weightunit.short": res ["weightunit.short"],
          "rangedcombatweapons": res ["rangedcombatweapons"],
          "reloadtime": res ["reloadtime"],
          "rangebrackets": res ["rangebrackets"],
          "rangedcombat": res ["rangedcombat"],
          "ammunition": res ["ammunition"],
          "armors": res ["armors"],
          "armor": res ["armor"],
          "protection.short": res ["protection.short"],
          "sturdinessrating.short": res ["sturdinessrating.short"],
          "wear.short": res ["wear.short"],
          "movementinitiative": res ["movementinitiative"],
          "carriedwhereexamples": res ["carriedwhereexamples"],
          "head.short": res ["head.short"],
          "torso.short": res ["torso.short"],
          "leftarm.short": res ["leftarm.short"],
          "rightarm.short": res ["rightarm.short"],
          "leftleg.short": res ["leftleg.short"],
          "rightleg.short": res ["rightleg.short"],
          "shieldparryingweapon": res ["shieldparryingweapon"],
          "structurepoints.short": res ["structurepoints.short"],
          "dice.short": res ["dice.short"],
          "actions.short": res ["actions.short"],
          "combatspecialabilities": res ["combatspecialabilities"],
          "conditions": res ["conditions"],
          "animosity": res ["animosity"],
          "encumbrance": res ["encumbrance"],
          "intoxicated": res ["intoxicated"],
          "stupor": res ["stupor"],
          "rapture": res ["rapture"],
          "fear": res ["fear"],
          "paralysis": res ["paralysis"],
          "pain": res ["pain"],
          "confusion": res ["confusion"],
          "states": res ["states"],
          "immobilized": res ["immobilized"],
          "unconscious": res ["unconscious"],
          "blind": res ["blind"],
          "bloodlust": res ["bloodlust"],
          "burning": res ["burning"],
          "cramped": res ["cramped"],
          "bound": res ["bound"],
          "incapacitated": res ["incapacitated"],
          "diseased": res ["diseased"],
          "prone": res ["prone"],
          "misfortune": res ["misfortune"],
          "rage": res ["rage"],
          "mute": res ["mute"],
          "deaf": res ["deaf"],
          "surprised": res ["surprised"],
          "badsmell": res ["badsmell"],
          "invisible": res ["invisible"],
          "poisoned": res ["poisoned"],
          "petrified": res ["petrified"],
          "item": res ["item"],
          "number.short": res ["number.short"],
          "price": res ["price"],
          "carriedwhere": res ["carriedwhere"],
          "total": res ["total"],
          "purse": res ["purse"],
          "ducats": res ["ducats"],
          "silverthalers": res ["silverthalers"],
          "halers": res ["halers"],
          "kreutzers": res ["kreutzers"],
          "gems": res ["gems"],
          "jewelry": res ["jewelry"],
          "other": res ["other"],
          "carryingcapacity": res ["carryingcapacity"],
          "carryingcapacitycalc": res ["carryingcapacitycalc"],
          "carryingcapacitylabel": res ["carryingcapacitylabel"],
          "animal": res ["animal"],
          "spellsandrituals": res ["spellsandrituals"],
          "aemax": res ["aemax"],
          "spellorritual": res ["spellorritual"],
          "cost": res ["cost"],
          "castingtime.splitted": res ["castingtime.splitted"],
          "range.splitted": res ["range.splitted"],
          "duration.splitted": res ["duration.splitted"],
          "effect": res ["effect"],
          "primaryattribute": res ["primaryattribute"],
          "tradition": res ["tradition"],
          "magicalspecialabilities": res ["magicalspecialabilities"],
          "liturgicalchantsandceremonies": res ["liturgicalchantsandceremonies"],
          "kpmax": res ["kpmax"],
          "liturgicaltime.splitted": res ["liturgicaltime.splitted"],
          "aspect": res ["aspect"],
          "aspects.oneormore": res ["aspects.oneormore"],
          "blessedspecialabilities": res ["blessedspecialabilities"],
          "blessings": res ["blessings"],
          "rulebase": res ["rulebase"],
          "optionalrules": res ["optionalrules"],
          "maximumattributescores": res ["maximumattributescores"],
          "higherdefensestats": res ["higherdefensestats"],
          "languagespecializations": res ["languagespecializations"],
          "lifepoints.short": res ["lifepoints.short"],
          "lifepointscalc": res ["lifepointscalc"],
          "arcaneenergy": res ["arcaneenergy"],
          "arcaneenergy.short": res ["arcaneenergy.short"],
          "arcaneenergycalc": res ["arcaneenergycalc"],
          "arcaneenergycalc.halfprimary": res ["arcaneenergycalc.halfprimary"],
          "arcaneenergycalc.noprimary": res ["arcaneenergycalc.noprimary"],
          "karmapoints": res ["karmapoints"],
          "karmapoints.short": res ["karmapoints.short"],
          "karmapointscalc": res ["karmapointscalc"],
          "spirit": res ["spirit"],
          "spirit.short": res ["spirit.short"],
          "spiritcalc": res ["spiritcalc"],
          "spirithalf": res ["spirithalf"],
          "spirithalf.short": res ["spirithalf.short"],
          "toughness": res ["toughness"],
          "toughness.short": res ["toughness.short"],
          "toughnesscalc": res ["toughnesscalc"],
          "dodge": res ["dodge"],
          "dodge.short": res ["dodge.short"],
          "dodgecalc": res ["dodgecalc"],
          "initiative": res ["initiative"],
          "initiative.short": res ["initiative.short"],
          "initiativecalc": res ["initiativecalc"],
          "movement": res ["movement"],
          "movement.short": res ["movement.short"],
          "movementcalc": res ["movementcalc"],
          "woundthreshold": res ["woundthreshold"],
          "woundthreshold.short": res ["woundthreshold.short"],
          "woundthresholdcalc": res ["woundthresholdcalc"],
          "boughtback": res ["boughtback"],
          "spent": res ["spent"],
          "select": res ["select"],
          "next": res ["next"],
          "showvalues": res ["showvalues"],
          "apvalue": res ["apvalue"],
          "lifepointbasevalue": res ["lifepointbasevalue"],
          "spiritbasevalue": res ["spiritbasevalue"],
          "toughnessbasevalue": res ["toughnessbasevalue"],
          "movementbasevalue": res ["movementbasevalue"],
          "attributeadjustments": res ["attributeadjustments"],
          "commoncultures": res ["commoncultures"],
          "automaticadvantages": res ["automaticadvantages"],
          "stronglyrecommendedadvantages": res ["stronglyrecommendedadvantages"],
          "stronglyrecommendeddisadvantages": res ["stronglyrecommendeddisadvantages"],
          "commonadvantages": res ["commonadvantages"],
          "commondisadvantages": res ["commondisadvantages"],
          "uncommonadvantages": res ["uncommonadvantages"],
          "uncommondisadvantages": res ["uncommondisadvantages"],
          "allcultures": res ["allcultures"],
          "or": res ["or"],
          "script": res ["script"],
          "areaknowledge": res ["areaknowledge"],
          "commonmundaneprofessions": res ["commonmundaneprofessions"],
          "commonmagicprofessions": res ["commonmagicprofessions"],
          "commonblessedprofessions": res ["commonblessedprofessions"],
          "commonskills": res ["commonskills"],
          "uncommonskills": res ["uncommonskills"],
          "commonnames": res ["commonnames"],
          "culturalpackageap": res ["culturalpackageap"],
          "allprofessions": res ["allprofessions"],
          "commonprofessions": res ["commonprofessions"],
          "allprofessiongroups": res ["allprofessiongroups"],
          "mundaneprofessions": res ["mundaneprofessions"],
          "magicalprofessions": res ["magicalprofessions"],
          "blessedprofessions": res ["blessedprofessions"],
          "novariant": res ["novariant"],
          "ownprofession": res ["ownprofession"],
          "prerequisites": res ["prerequisites"],
          "languagesandliteracytotalingap": res ["languagesandliteracytotalingap"],
          "skillspecialization": res ["skillspecialization"],
          "cursestotalingap": res ["cursestotalingap"],
          "combattechniquesselection": res ["combattechniquesselection"],
          "combattechniquecounter": res ["combattechniquecounter"],
          "combattechniquessecondselection": res ["combattechniquessecondselection"],
          "skillsselection": res ["skillsselection"],
          "cantripsfromlist": res ["cantripsfromlist"],
          "cantripcounter": res ["cantripcounter"],
          "thetwelveblessings": res ["thetwelveblessings"],
          "thetwelveblessingsexceptions": res ["thetwelveblessingsexceptions"],
          "suggestedadvantages": res ["suggestedadvantages"],
          "suggesteddisadvantages": res ["suggesteddisadvantages"],
          "unsuitableadvantages": res ["unsuitableadvantages"],
          "unsuitabledisadvantages": res ["unsuitabledisadvantages"],
          "variants": res ["variants"],
          "insteadof": res ["insteadof"],
          "selectattributeadjustment": res ["selectattributeadjustment"],
          "buyculturalpackage": res ["buyculturalpackage"],
          "selectnativetongue": res ["selectnativetongue"],
          "buyscript": res ["buyscript"],
          "selectscript": res ["selectscript"],
          "combattechniquessecondcounter": res ["combattechniquessecondcounter"],
          "ofthefollowingcombattechniques": res ["ofthefollowingcombattechniques"],
          "cursestotalingapleft": res ["cursestotalingapleft"],
          "languagesandliteracytotalingapleft": res ["languagesandliteracytotalingapleft"],
          "applicationforskillspecialization": res ["applicationforskillspecialization"],
          "skillselectiongroups": res ["skillselectiongroups"],
          "skillselectionap": res ["skillselectionap"],
          "complete": res ["complete"],
          "attributetotal": res ["attributetotal"],
          "modifier": res ["modifier"],
          "losttotal": res ["losttotal"],
          "lifepointslostpermanently.short": res ["lifepointslostpermanently.short"],
          "lifepointslostpermanently": res ["lifepointslostpermanently"],
          "arcaneenergylostpermanently": res ["arcaneenergylostpermanently"],
          "arcaneenergylostpermanently.short": res ["arcaneenergylostpermanently.short"],
          "karmapointslostpermanently": res ["karmapointslostpermanently"],
          "karmapointslostpermanently.short": res ["karmapointslostpermanently.short"],
          "afraidof": res ["afraidof"],
          "immunityto": res ["immunityto"],
          "hatredof": res ["hatredof"],
          "rule": res ["rule"],
          "extendedcombatspecialabilities": res ["extendedcombatspecialabilities"],
          "extendedmagicalspecialabilities": res ["extendedmagicalspecialabilities"],
          "extendedblessedtspecialabilities": res ["extendedblessedtspecialabilities"],
          "penalty": res ["penalty"],
          "level": res ["level"],
          "perlevel": res ["perlevel"],
          "volume": res ["volume"],
          "bindingcost": res ["bindingcost"],
          "protectivecircle": res ["protectivecircle"],
          "wardingcircle": res ["wardingcircle"],
          "actions": res ["actions"],
          "racecultureorprofessionrequiresautomaticorsuggested":
            res ["racecultureorprofessionrequiresautomaticorsuggested"],
          "advantage": res ["advantage"],
          "disadvantage": res ["disadvantage"],
          "primaryattributeofthetradition": res ["primaryattributeofthetradition"],
          "knowledgeofspell": res ["knowledgeofspell"],
          "knowledgeofliturgicalchant": res ["knowledgeofliturgicalchant"],
          "appropriatecombatstylespecialability": res ["appropriatecombatstylespecialability"],
          "appropriatemagicalstylespecialability": res ["appropriatemagicalstylespecialability"],
          "appropriateblessedstylespecialability": res ["appropriateblessedstylespecialability"],
          "customcost": res ["customcost"],
          "customcostfor": res ["customcostfor"],
          "skillgroups": res ["skillgroups"],
          "newapplications": res ["newapplications"],
          "applications": res ["applications"],
          "tools": res ["tools"],
          "quality": res ["quality"],
          "failedcheck": res ["failedcheck"],
          "criticalsuccess": res ["criticalsuccess"],
          "botch": res ["botch"],
          "improvementcost": res ["improvementcost"],
          "common": res ["common"],
          "uncommon": res ["uncommon"],
          "combattechniquegroups": res ["combattechniquegroups"],
          "special": res ["special"],
          "specialabilitygroups": res ["specialabilitygroups"],
          "combatspecialabilitygroups": res ["combatspecialabilitygroups"],
          "spellgroups": res ["spellgroups"],
          "cantrip": res ["cantrip"],
          "propertylist": res ["propertylist"],
          "magicaltraditions": res ["magicaltraditions"],
          "castingtime": res ["castingtime"],
          "ritualtime": res ["ritualtime"],
          "aecost": res ["aecost"],
          "range": res ["range"],
          "duration": res ["duration"],
          "targetcategory": res ["targetcategory"],
          "property": res ["property"],
          "traditions": res ["traditions"],
          "lengthoftime": res ["lengthoftime"],
          "musictradition": res ["musictradition"],
          "liturgicalchantgroups": res ["liturgicalchantgroups"],
          "blessing": res ["blessing"],
          "aspectlist": res ["aspectlist"],
          "blessedtraditions": res ["blessedtraditions"],
          "liturgicaltime": res ["liturgicaltime"],
          "ceremonialtime": res ["ceremonialtime"],
          "kpcost": res ["kpcost"],
          "ducates.short": res ["ducates.short"],
          "silverthalers.short": res ["silverthalers.short"],
          "halers.short": res ["halers.short"],
          "kreutzers.short": res ["kreutzers.short"],
          "initialstartingwealth": res ["initialstartingwealth"],
          "priceunit": res ["priceunit"],
          "itemgroups": res ["itemgroups"],
          "armortypes": res ["armortypes"],
          "damage": res ["damage"],
          "primaryattributeanddamagethreshold.short":
            res ["primaryattributeanddamagethreshold.short"],
          "length": res ["length"],
          "lengthunit": res ["lengthunit"],
          "range.short": res ["range.short"],
          "edititem": res ["edititem"],
          "createitem": res ["createitem"],
          "number": res ["number"],
          "itemgroup": res ["itemgroup"],
          "itemgrouphint": res ["itemgrouphint"],
          "improvisedweapon": res ["improvisedweapon"],
          "improvisedweapongroup": res ["improvisedweapongroup"],
          "template": res ["template"],
          "primaryattribute.withshort": res ["primaryattribute.withshort"],
          "primaryattribute.short": res ["primaryattribute.short"],
          "damagethreshold": res ["damagethreshold"],
          "separatedamagethresholds": res ["separatedamagethresholds"],
          "breakingpointratingmodifier.short": res ["breakingpointratingmodifier.short"],
          "damaged": res ["damaged"],
          "lengthwithunit": res ["lengthwithunit"],
          "parryingweapon": res ["parryingweapon"],
          "twohandedweapon": res ["twohandedweapon"],
          "rangeclose": res ["rangeclose"],
          "rangemedium": res ["rangemedium"],
          "rangefar": res ["rangefar"],
          "armortype": res ["armortype"],
          "sturdinessmodifier.short": res ["sturdinessmodifier.short"],
          "wear": res ["wear"],
          "hitzonearmoronly": res ["hitzonearmoronly"],
          "movementmodifier.short": res ["movementmodifier.short"],
          "initiativemodifier.short": res ["initiativemodifier.short"],
          "additionalpenalties": res ["additionalpenalties"],
          "edithitzonearmor": res ["edithitzonearmor"],
          "createhitzonearmor": res ["createhitzonearmor"],
          "head": res ["head"],
          "torso": res ["torso"],
          "leftarm": res ["leftarm"],
          "rightarm": res ["rightarm"],
          "leftleg": res ["leftleg"],
          "rightleg": res ["rightleg"],
          "rulemechanics": res ["rulemechanics"],
          "weaponadvantage": res ["weaponadvantage"],
          "weapondisadvantage": res ["weapondisadvantage"],
          "armoradvantage": res ["armoradvantage"],
          "armordisadvantage": res ["armordisadvantage"],
          "sizecategory": res ["sizecategory"],
          "type": res ["type"],
          "apspent.short": res ["apspent.short"],
          "attacks": res ["attacks"],
          "image": res ["image"],
          "error": res ["error"],
          "errorcode": res ["errorcode"],
          "loadtableserror": res ["loadtableserror"],
          "saveconfigerror": res ["saveconfigerror"],
          "saveheroeserror": res ["saveheroeserror"],
          "exportheroasjson": res ["exportheroasjson"],
          "herosaved": res ["herosaved"],
          "exportheroerror": res ["exportheroerror"],
          "printcharactersheettopdf": res ["printcharactersheettopdf"],
          "pdfsaved": res ["pdfsaved"],
          "pdfsaveerror": res ["pdfsaveerror"],
          "pdfcreationerror": res ["pdfcreationerror"],
          "importheroerror": res ["importheroerror"],
          "allsaved": res ["allsaved"],
          "everythingelsesaved": res ["everythingelsesaved"],
          "emptylist": res ["emptylist"],
          "musictraditions": res ["musictraditions"],
          "notenoughap": res ["notenoughap"],
          "notenoughap.text": res ["notenoughap.text"],
          "reachedlimit": res ["reachedlimit"],
          "reachedaplimit": res ["reachedaplimit"],
          "magicaladvantages": res ["magicaladvantages"],
          "blessedadvantages": res ["blessedadvantages"],
          "magicaldisadvantages": res ["magicaldisadvantages"],
          "blesseddisadvantages": res ["blesseddisadvantages"],
          "remove": res ["remove"],
          "removeenergypointslostpermanently": res ["removeenergypointslostpermanently"],
          "removeenergypointslostpermanentlyinputhint":
            res ["removeenergypointslostpermanentlyinputhint"],
          "group": res ["group"],
          "skillrating": res ["skillrating"],
          "combattechniquerating": res ["combattechniquerating"],
          "attack": res ["attack"],
          "parry": res ["parry"],
          "checkmodifier.short": res ["checkmodifier.short"],
          "checkmodifier": res ["checkmodifier"],
          "unfamiliartraditions": res ["unfamiliartraditions"],
          "spellextensions": res ["spellextensions"],
          "liturgicalchantextensions": res ["liturgicalchantextensions"],
          "enableeditingheroaftercreationphase": res ["enableeditingheroaftercreationphase"],
          "allcombattechniques": res ["allcombattechniques"],
          "newversionavailable": res ["newversionavailable"],
          "newversionavailable.text": res ["newversionavailable.text"],
          "newversionavailable.textwithsize": res ["newversionavailable.textwithsize"],
          "update": res ["update"],
          "nonewversionavailable": res ["nonewversionavailable"],
          "nonewversionavailable.text": res ["nonewversionavailable.text"],
          "downloadupdate": res ["downloadupdate"],
          "attributeadjustmentselection": res ["attributeadjustmentselection"],
          "aboutapp": res ["aboutapp"],
          "preferences": res ["preferences"],
          "quit": res ["quit"],
          "edit": res ["edit"],
          "view": res ["view"],
          "enableallrulebooks": res ["enableallrulebooks"],
          "races": res ["races"],
          "cultures": res ["cultures"],
          "professions": res ["professions"],
          "items": res ["items"],
          "allskills": res ["allskills"],
          "allspecialabilities": res ["allspecialabilities"],
          "allspells": res ["allspells"],
          "allliturgicalchants": res ["allliturgicalchants"],
          "allitemtemplates": res ["allitemtemplates"],
          "chooseacategory": res ["chooseacategory"],
          "chooseacategorytodisplayalist": res ["chooseacategorytodisplayalist"],
          "emptylistnoresults": res ["emptylistnoresults"],
          "extendedskillspecialabilities": res ["extendedskillspecialabilities"],
          "deleteavatar": res ["deleteavatar"],
          "stronglyrecommended": res ["stronglyrecommended"],
          "unfamiliarspells": res ["unfamiliarspells"],
          "unfamiliarspellselectionfortraditionguildmage":
            res ["unfamiliarspellselectionfortraditionguildmage"],
          "selectaspell": res ["selectaspell"],
          "pactisincompletehint": res ["pactisincompletehint"],
          "manualherodatarepair": res ["manualherodatarepair"],
          "manualherodatarepairexplanation": res ["manualherodatarepairexplanation"],
          "unfamiliarspell": res ["unfamiliarspell"],
          "saveandquit": res ["saveandquit"],
          "uses": res ["uses"],
          "complementarysources": res ["complementarysources"],
          "and": res ["and"],
          "demondomains": res ["demondomains"],
          "demontypes": res ["demontypes"],
          "demontype": res ["demontype"],
          "circleofdamnation": res["circleofdamnation"],
          "lesserpact": res ["lesserpact"],
          "tribaltraditions": res ["tribaltraditions"],
          "tribes": res ["tribes"],
          "saveheroerror": res ["saveheroerror"],
          "brews": res ["brews"],
          "brew": res ["brew"],
          "all": res ["all"],
          "allmeleecombattechniques": res ["allmeleecombattechniques"],
          "allrangedcombattechniques": res ["allrangedcombattechniques"],
          "allmeleecombattechniqueswithparry": res ["allmeleecombattechniqueswithparry"],
          "allmeleecombattechniquesforonehandedweapons":
            res ["allmeleecombattechniquesforonehandedweapons"],
          "youcannotuseamodificationonthisspellscastingtime":
            res ["youcannotuseamodificationonthisspellscastingtime"],
          "youcannotuseamodificationonthisspellsritualtime":
            res ["youcannotuseamodificationonthisspellsritualtime"],
          "youcannotuseamodificationonthisspellscost":
            res ["youcannotuseamodificationonthisspellscost"],
          "youcannotuseamodificationonthisspellsrange":
            res ["youcannotuseamodificationonthisspellsrange"],
          "youcannotuseamodificationonthisspellsduration":
            res ["youcannotuseamodificationonthisspellsduration"],
          "youcannotuseamodificationonthischantsliturgicaltime":
            res ["youcannotuseamodificationonthischantsliturgicaltime"],
          "youcannotuseamodificationonthischantsceremonialtime":
            res ["youcannotuseamodificationonthischantsceremonialtime"],
          "youcannotuseamodificationonthischantscost":
            res ["youcannotuseamodificationonthischantscost"],
          "youcannotuseamodificationonthischantsrange":
            res ["youcannotuseamodificationonthischantsrange"],
          "youcannotuseamodificationonthischantsduration":
            res ["youcannotuseamodificationonthischantsduration"],
          // tslint:enable: no-string-literal
        }))
    }
